# Default config for sway
#
# Copy this to ~/.config/sway/config and edit it to your liking.
#
# Read `man 5 sway` for a complete reference.

### Variables
#
# Logo key. Use Mod1 for Alt.
set $mod Mod4
# Home row direction keys, like vim
#set $left h
#set $down j
#set $up k
#set $right l
# Your preferred terminal emulator
# set $term x-terminal-emulator
# set $term terminator
set $term alacritty
#set $term foot
set $displaycmd /bin/bash /home/to72153/bin/display.sh
set $lockcmd /bin/bash /home/to72153/bin/lock.sh
set $bgcmd /bin/bash /home/to72153/bin/bg.sh

# Border
default_border pixel

# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
set $menu dmenu_path | dmenu | xargs swaymsg exec --

### Mako for notification
exec_always 'pgrep mako || mako'

### Output configuration
#
# Default wallpaper (more resolutions are available in /usr/share/backgrounds/sway/)
exec_always $bgcmd
bindsym $mod+Shift+b exec $bgcmd 
#output * bg /usr/share/backgrounds/sway/Sway_Wallpaper_Blue_1920x1080.png fill
#
# Example configuration:
#
#   output HDMI-A-1 resolution 1920x1080 position 1920,0
#output eDP-1 pos 0 0 res 1920x1080
#output DP-3 pos 1920 0 res 1920x1080
#output DP-4 pos 3840 0 res 1920x1080

# You can get the names of your outputs by running: swaymsg -t get_outputs

### Idle configuration
#
# Example configuration:
#
exec_always swaymsg "output * dpms on"
exec_always 'pgrep nm-applet || nm-applet'
exec_always 'pgrep swayrd || /home/to72153/.cargo/bin/swayrd'

exec swayidle -w \
         timeout 300 'swaylock -f -c 000000' \
         timeout 600 'swaymsg "output * dpms off"' \
              resume 'swaymsg "output * dpms on"' \
         before-sleep 'swaylock -f -c 000000'
#
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

### Input configuration
#
# Example configuration:
input * {
    xkb_layout "fr"
}

input "1:1:AT_Translated_Set_2_keyboard" xkb_model "pc105"

#
#   input "2:14:SynPS/2_Synaptics_TouchPad" {
#       dwt enabled
#       tap enabled
#       natural_scroll enabled
#       middle_emulation enabled
#   }
#
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.

### Key bindings
#
# Basics:
#
    # Start a terminal
    bindsym $mod+Return exec $term

    # Kill focused window
    bindsym $mod+Shift+q kill

    # Start your launcher
    # bindsym $mod+d exec $menu
    bindsym $mod+d exec --no-startup-id wofi --show drun 
    bindsym $mod+shift+d exec --no-startup-id wofi --show run 
    

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # Reload the configuration file
    bindsym $mod+Shift+c reload

    # Exit sway (logs you out of your Wayland session)
    bindsym $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -b 'Yes, exit sway' 'swaymsg exit'
#
# Moving around:
#
    # Move your focus around
    #bindsym $mod+$left focus left
    #bindsym $mod+$down focus down
    #bindsym $mod+$up focus up
    #bindsym $mod+$right focus right
    # Or use $mod+[up|down|left|right]
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    # Move the focused window with the same, but add Shift
    #bindsym $mod+Shift+$left move left
    #bindsym $mod+Shift+$down move down
    #bindsym $mod+Shift+$up move up
    #bindsym $mod+Shift+$right move right
    # Ditto, with arrow keys
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right
#
# Workspaces:
#
    # Switch to workspace
    bindsym $mod+ampersand workspace 1
    bindsym $mod+eacute workspace 2
    bindsym $mod+quotedbl workspace 3
    bindsym $mod+apostrophe workspace 4
    bindsym $mod+parenleft workspace 5
    bindsym $mod+minus workspace 6
    bindsym $mod+egrave workspace 7
    bindsym $mod+underscore workspace 8
    bindsym $mod+ccedilla workspace 9
    bindsym $mod+agrave workspace 10

    bindsym $mod+Ctrl+ampersand move container to workspace 1
    bindsym $mod+Ctrl+eacute move container to workspace 2
    bindsym $mod+Ctrl+quotedbl move container to workspace 3
    bindsym $mod+Ctrl+apostrophe move container to workspace 4
    bindsym $mod+Ctrl+parenleft move container to workspace 5
    bindsym $mod+Ctrl+minus move container to workspace 6
    bindsym $mod+Ctrl+egrave move container to workspace 7
    bindsym $mod+Ctrl+underscore move container to workspace 8
    bindsym $mod+Ctrl+ccedilla move container to workspace 9
    bindsym $mod+Ctrl+agrave move container to workspace 10


#    bindsym $mod+1 workspace 1
#    bindsym $mod+2 workspace 2
#    bindsym $mod+3 workspace 3
#    bindsym $mod+4 workspace 4
#    bindsym $mod+5 workspace 5
#    bindsym $mod+6 workspace 6
#    bindsym $mod+7 workspace 7
#    bindsym $mod+8 workspace 8
#    bindsym $mod+9 workspace 9
#    bindsym $mod+0 workspace 10
    # Move focused container to workspace
#    bindsym $mod+Ctrl+1 move container to workspace 1
#    bindsym $mod+Ctrl+2 move container to workspace 2
#    bindsym $mod+Ctrl+3 move container to workspace 3
#    bindsym $mod+Ctrl+4 move container to workspace 4
#    bindsym $mod+Ctrl+5 move container to workspace 5
#    bindsym $mod+Ctrl+6 move container to workspace 6
#    bindsym $mod+Ctrl+7 move container to workspace 7
#    bindsym $mod+Ctrl+8 move container to workspace 8
#    bindsym $mod+Ctrl+9 move container to workspace 9
#    bindsym $mod+Ctrl+0 move container to workspace 10
    # Note: workspaces can have any name you want, not just numbers.
    # We just use 1-10 as the default.
    bindsym $mod+Ctrl+left workspace prev
    bindsym $mod+Ctrl+right workspace next

#
# SCREENSHOT grim slurp
#
# Take a screenshot with all output and save it into screenshots
bindsym Print exec grim -t png ~/screenshots/$(date +%Y-%m-%d_%H-%m-%s).png

# Take a Screenshot with the region select
bindsym $mod+Print exec grim -t png -g "$(slurp)" ~/screenshots/$(date +%Y-%m-%d_%H-%m-%s).png


#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits

    bindsym $mod+h splith
    bindsym $mod+v splitv

    # Switch the current container between different layout styles
    bindsym $mod+s layout stacking
    bindsym $mod+w layout tabbed
    bindsym $mod+e layout toggle split

    # Make the current focus fullscreen
    bindsym $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym $mod+space focus mode_toggle

    # Move focus to the parent container
    bindsym $mod+a focus parent

#
# swayr
#
    bindsym $mod+Shift+p exec /home/to72153/.cargo/bin/swayr switch-window                    
    bindsym $mod+Shift+w exec /home/to72153/.cargo/bin/swayr switch-workspace 

#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+twosuperior move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+twosuperior scratchpad show
#
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    # bindsym $left resize shrink width 10px
    # bindsym $down resize grow height 10px
    # bindsym $up resize shrink height 10px
    # bindsym $right resize grow width 10px

    # Ditto, with arrow keys
    bindsym Left resize shrink width 10px
    bindsym Down resize grow height 10px
    bindsym Up resize shrink height 10px
    bindsym Right resize grow width 10px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"

#
# Status Bar:
#
# Read `man 5 sway-bar` for more information about this section.
bar {
    position top

    # When the status_command prints a new line to stdout, swaybar updates.
    # The default just shows the current date and time.
    #status_command while date +'%Y-%m-%d %l:%M:%S %p'; do sleep 1; done
    #status_command i3status
    swaybar_command waybar

    colors {
        statusline #ffffff
        background #323232
        inactive_workspace #32323200 #32323200 #5c5c5c
    }
}

# Network
bindsym $mod+Ctrl+c exec $term -e nmtui-connect
bindsym $mod+Ctrl+e exec $term -e nmtui-edit

bindsym $mod+Ctrl+l exec swaylock -e -c 000000 -i /usr/share/backgrounds/sway/Sway_Wallpaper_Blue_1920x1080.png
bindsym $mod+l exec $lockcmd

# exec --no-startup-id nm-applet"

set $get_wkspcs i3-msg -t get_workspaces | jq -r '.[].name' | sort -n
set $get_outputs swaymsg -r -t get_outputs | jq -r '.[].name' | sort -n

bindsym $mod+Alt+Tab exec --no-startup-id "i3-msg workspace $( $get_wkspcs | rofi -dmenu -p 'Switch to workspace')"

# send workspace to a specific output
bindsym $mod+Home exec --no-startup-id "i3-msg move workspace to output $( $get_outputs | rofi -dmenu -p 'Send workspace to output')"

# send workspace on the current screen
bindsym $mod+Shift+Home exec ' \
            out=$(swaymsg -rt get_outputs | jq -r ".[]|select(.focused).name"); \
            wks=$(swaymsg -t get_workspaces | jq -r ".[]|select(.focused == false).name" | wofi --dmenu); \
            swaymsg workspace "$wks", move workspace to output "$out"'


# send curent container to named workspace (menu appears at top of screen to avoid hiding
# current workspace numbers (displayed at bottom of screen)
bindsym $mod+Shift+Tab exec --no-startup-id "i3-msg move container to workspace $( $get_wkspcs | rofi -dmenu -p 'Send container to workspace')"
# Active window switcher
bindsym $mod+Ctrl+Tab exec --no-startup-id $term -e 'rofi -show window'

# Brightness and sound
bindsym XF86MonBrightnessDown exec brightnessctl set 5%-
bindsym XF86MonBrightnessUp exec brightnessctl set +5%
bindsym XF86AudioRaiseVolume exec pactl set-sink-volume @DEFAULT_SINK@ +5%
bindsym XF86AudioLowerVolume exec pactl set-sink-volume @DEFAULT_SINK@ -5%
bindsym XF86AudioMute exec pactl set-sink-mute @DEFAULT_SINK@ toggle
bindsym XF86AudioMicMute exec pactl set-source-mute @DEFAULT_SOURCE@ toggle

# keepass
#bindsym Ctrl+Alt+a exec mono /usr/lib/keepass2/KeePass.exe --auto-type
bindsym Ctrl+Alt+a exec mono /usr/lib/keepass2/KeePass.exe --auto-type


include /etc/sway/config.d/*

exec_always $displaycmd
bindsym $mod+Shift+F12 exec $displaycmd

